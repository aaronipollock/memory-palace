{"ast":null,"code":"var _jsxFileName = \"/Users/aaronipollock/Desktop/memory-palace/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport InputPage from './components/InputPage';\nimport VisualizerPage from './components/VisualizerPage';\nimport SavedRooms from './components/SavedRooms';\nimport LandingPage from './components/LandingPage';\nimport FeedbackButton from './components/FeedbackButton';\nimport TermsOfService from './components/TermsOfService';\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport CookiePolicy from './components/CookiePolicy';\nimport { ToastProvider } from './context/ToastContext';\n// import UploadPage from './components/UploadPage'; // Uncomment if you have an upload page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [associations, setAssociations] = useState(() => {\n    const saved = localStorage.getItem('associations');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [roomType, setRoomType] = useState(() => localStorage.getItem('roomType') || '');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    localStorage.setItem('associations', JSON.stringify(associations));\n    localStorage.setItem('roomType', roomType);\n  }, [associations, roomType]);\n  const handleImagesGenerated = (newAssociations, newRoomType) => {\n    console.log('Generated associations:', newAssociations);\n    console.log('Room type:', newRoomType);\n    if (Array.isArray(newAssociations)) {\n      setAssociations(newAssociations);\n      setRoomType(newRoomType);\n      // Use navigate instead of window.location\n      window.location.href = '/visualizer';\n    } else {\n      console.error('Invalid associations data:', newAssociations);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ToastProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(LandingPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/demo\",\n            element: /*#__PURE__*/_jsxDEV(InputPage, {\n              onImagesGenerated: handleImagesGenerated,\n              isLoading: isLoading,\n              setIsLoading: setIsLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/visualizer\",\n            element: /*#__PURE__*/_jsxDEV(VisualizerPage, {\n              associations: associations,\n              roomType: roomType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/saved-rooms\",\n            element: /*#__PURE__*/_jsxDEV(SavedRooms, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/terms\",\n            element: /*#__PURE__*/_jsxDEV(TermsOfService, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/privacy\",\n            element: /*#__PURE__*/_jsxDEV(PrivacyPolicy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/cookies\",\n            element: /*#__PURE__*/_jsxDEV(CookiePolicy, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FeedbackButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/2pkGIsZLc9Sfl3U+GLfJicsA30=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useNavigate","InputPage","VisualizerPage","SavedRooms","LandingPage","FeedbackButton","TermsOfService","PrivacyPolicy","CookiePolicy","ToastProvider","jsxDEV","_jsxDEV","App","_s","associations","setAssociations","saved","localStorage","getItem","JSON","parse","roomType","setRoomType","isLoading","setIsLoading","setItem","stringify","handleImagesGenerated","newAssociations","newRoomType","console","log","Array","isArray","window","location","href","error","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onImagesGenerated","_c","$RefreshReg$"],"sources":["/Users/aaronipollock/Desktop/memory-palace/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport InputPage from './components/InputPage';\nimport VisualizerPage from './components/VisualizerPage';\nimport SavedRooms from './components/SavedRooms';\nimport LandingPage from './components/LandingPage';\nimport FeedbackButton from './components/FeedbackButton';\nimport TermsOfService from './components/TermsOfService';\nimport PrivacyPolicy from './components/PrivacyPolicy';\nimport CookiePolicy from './components/CookiePolicy';\nimport { ToastProvider } from './context/ToastContext';\n// import UploadPage from './components/UploadPage'; // Uncomment if you have an upload page\n\nfunction App() {\n    const [associations, setAssociations] = useState(() => {\n        const saved = localStorage.getItem('associations');\n        return saved ? JSON.parse(saved) : [];\n    });\n    const [roomType, setRoomType] = useState(() =>\n        localStorage.getItem('roomType') || ''\n    );\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        localStorage.setItem('associations', JSON.stringify(associations));\n        localStorage.setItem('roomType', roomType);\n    }, [associations, roomType]);\n\n    const handleImagesGenerated = (newAssociations, newRoomType) => {\n        console.log('Generated associations:', newAssociations);\n        console.log('Room type:', newRoomType);\n\n        if (Array.isArray(newAssociations)) {\n            setAssociations(newAssociations);\n            setRoomType(newRoomType);\n            // Use navigate instead of window.location\n            window.location.href = '/visualizer';\n        } else {\n            console.error('Invalid associations data:', newAssociations);\n        }\n    };\n\n  return (\n    <ToastProvider>\n    <div className=\"min-h-screen\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<LandingPage />} />\n          <Route path=\"/login\" element={<LandingPage />} />\n          <Route\n            path=\"/demo\"\n            element={\n              <InputPage\n                onImagesGenerated={handleImagesGenerated}\n                isLoading={isLoading}\n                setIsLoading={setIsLoading}\n              />\n            }\n          />\n          <Route\n            path=\"/visualizer\"\n            element={<VisualizerPage associations={associations} roomType={roomType} />}\n          />\n          <Route path=\"/saved-rooms\" element={<SavedRooms />} />\n          <Route path=\"/terms\" element={<TermsOfService />} />\n          <Route path=\"/privacy\" element={<PrivacyPolicy />} />\n          <Route path=\"/cookies\" element={<CookiePolicy />} />\n          {/* <Route path=\"/upload\" element={<UploadPage />} /> */}\n        </Routes>\n        <FeedbackButton />\n      </Router>\n    </div>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}